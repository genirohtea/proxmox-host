---
# git clone https://github.com/wvthoog/proxmox-vgpu-installer.git
# cd proxmox-vgpu-installer
# bash proxmox-installer.sh

- name: "Install git"
  ansible.builtin.apt:
    package: git
    state: present
    update_cache: true
  become: true
  become_method: ansible.builtin.su # Default proxmox

- name: "Install megatools which is used to get the drivers"
  ansible.builtin.apt:
    package: megatools
    state: present
    update_cache: true
  become: true
  become_method: ansible.builtin.su # Default proxmox

- name: "Clone the vgpu installer script"
  ansible.builtin.git:
    repo: "https://github.com/genirohtea/proxmox-vgpu-installer"
    dest: /root/proxmox-vgpu-installer
    update: true
    version: e98d0991f60556f131c67bddfe24e006d6b6412e # pragma: allowlist secret
# Example Output

# Welcome to the Nvidia vGPU installer version 1.1 for Proxmox
# This system is running Proxmox version 8.2.4 with kernel 6.5.13-3-pve

# Select an option:

# 1) New vGPU installation
# 2) Upgrade vGPU installation
# 3) Remove vGPU installation
# 4) Download vGPU drivers
# 5) License vGPU
# 6) Exit

# Enter your choice: 1

# You are currently at step 1 of the installation process

# Selected: New vGPU installation

# [+] Making changes to APT for Proxmox version: 8
# [+] Running APT Update

# [?] Do you want to proceed with APT Dist-Upgrade ? (y/n): y

# [+] Running APT Dist-Upgrade (...this might take some time)
# [+] Installing packages
# [+] Pinning kernel: 6.5.13-6-pve
# [*] Found one Nvidia GPU in your system

# NVIDIA Quadro P2000 is vGPU capable through vgpu_unlock with driver version 16

# [+] Downloading vgpu-proxmox
# [+] Downloading vgpu_unlock-rs
# [+] Downloading Rust
# [+] Source Rust
# [+] Building vgpu_unlock-rs
# [+] Creating vGPU files and directories
# [+] Creating systemd folders
# [+] Adding vgpu_unlock-rs library
# [+] Systemctl daemon-reload
# [+] Enable nvidia-vgpud.service
# [+] Enable nvidia-vgpu-mgr.service
# [+] Checking CPU architecture
# [+] Your CPU vendor id: AuthenticAMD
# [-] AMD IOMMU options are already set in GRUB_CMDLINE_LINUX_DEFAULT
# [+] Updating GRUB
# [-] Kernel modules already present
# [-] Nouveau already blacklisted
# [+] Updating initramfs

# Step 1 completed. Reboot your machine to resume the installation.

# Welcome to the Nvidia vGPU installer version 1.1 for Proxmox
# This system is running Proxmox version 8.2.4 with kernel 6.5.13-6-pve

# You are currently at step 2 of the installation process

# Proceeding with the installation

# [+] AMD IOMMU Enabled
# [-] You are running Proxmox version 8.2.4
# [-] Your Nvidia GPU is supported by driver version 16.x

# Select vGPU driver version:

# 1: 17.0 (550.54.10)
# 2: 16.4 (535.161.05)
# 3: 16.2 (535.129.03)
# 4: 16.1 (535.104.06)
# 5: 16.0 (535.54.06)

# Enter your choice: 2

# [-] Driver version: NVIDIA-Linux-x86_64-535.161.05-vgpu-kvm.run
# [-] Moved NVIDIA-Linux-x86_64-535.161.05-vgpu-kvm.run to NVIDIA-Linux-x86_64-535.161.05-vgpu-kvm.run.bak
# [+] Downloading vGPU NVIDIA-Linux-x86_64-535.161.05-vgpu-kvm.run host driver using megadl
# Downloaded NVIDIA-Linux-x86_64-535.161.05-vgpu-kvm.run
# [+] MD5 checksum matched. Downloaded file is valid.
# [-] Moved NVIDIA-Linux-x86_64-535.161.05-vgpu-kvm-custom.run to NVIDIA-Linux-x86_64-535.161.05-vgpu-kvm-custom.run.bak
# [+] Patching driver
# [+] Installing patched driver

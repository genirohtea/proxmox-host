---
- name: Add an administrative user
  when:
    - admin_username is defined
    - admin_password is defined
    - admin_username is string
    - admin_password is string
    - admin_username | length > 0
    - admin_password | length > 0
  block:
    - name: Add the administrative user as a linux user
      become: true
      ansible.builtin.user:
        name: "{{ admin_username }}"
        shell: /bin/bash
        create_home: true
        generate_ssh_key: true
        ssh_key_bits: 4096
        ssh_key_type: "rsa"
        password: "{{ admin_password | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}"

    # Have to add this user to proxmox PAM

    - name: "Check if administrative user already exists"
      tags:
        - molecule-notest
      ansible.builtin.shell: >-
        set -o pipefail;
        pveum user list | grep -E "{{ admin_username }}@pam"
      register: user_check
      changed_when: false
      ignore_errors: true
      args:
        executable: /bin/bash

    - name: "Add the linux PAM user to proxmox ACLs"
      tags:
        - molecule-notest
      command: "pveum user add {{ admin_username }}@pam"
      when: user_check.rc != 0
      changed_when: false

    - name: "Check if Administrator role already exists"
      tags:
        - molecule-notest
      ansible.builtin.shell: >-
        set -o pipefail;
        pveum role list | grep -E "{{ pve_role }}"
      register: role_check
      changed_when: false
      ignore_errors: true
      args:
        executable: /bin/bash

    - name: "Give Administrator permissions to the administrator user"
      tags:
        - molecule-notest
      command: "pveum aclmod / -user {{ admin_username }}@pam -role {{ pve_role }}"
      changed_when: false

    - name: "Check administrator user permissions"
      tags:
        - molecule-notest
      command: "pveum user permissions {{ admin_username }}@pam"
      changed_when: false

    - name: "Install the sudo form of root access"
      ansible.builtin.apt:
        package: sudo
        state: present
        update_cache: true
      become: true
      become_method: ansible.builtin.su # Default proxmox

    # User must have sudo privilege for proxmox tasks to be compatible with terraform: bgp/proxmox
    - name: "Ensure sudoers file includes admin user NOPASSWD for /sbin/pvesm"
      ansible.builtin.lineinfile:
        path: "/etc/sudoers"
        state: present
        line: "{{ admin_username }} ALL=(root) NOPASSWD: /sbin/pvesm"
        validate: "visudo -cf %s"
      become: true

    - name: "Ensure sudoers file includes admin user NOPASSWD for /sbin/qm"
      ansible.builtin.lineinfile:
        path: "/etc/sudoers"
        state: present
        line: "{{ admin_username }} ALL=(root) NOPASSWD: /sbin/qm"
        validate: "visudo -cf %s"
      become: true

    - name: "Ensure sudoers file includes admin user NOPASSWD for /usr/bin/tee /var/lib/vz/*"
      ansible.builtin.lineinfile:
        path: "/etc/sudoers"
        state: present
        line: "{{ admin_username }} ALL=(root) NOPASSWD: /usr/bin/tee /var/lib/vz/*"
        validate: "visudo -cf %s"
      become: true

  rescue:
    - name: "Administrator user creation failed"
      ansible.builtin.set_fact:
        task_failed: true
